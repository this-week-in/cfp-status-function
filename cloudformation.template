{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation sample template that contains a single Lambda function behind an API Gateway",
  "Resources": {
    "GreetingLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cfp-status-function",
          "S3Key": "deployment.zip"
        },
        "FunctionName": "GreetingLambda",
        "Handler": "com.joshlong.cfp.CfpStatusHandler",
        "MemorySize": 1024,
        "Runtime": "java8",
        "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]}
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "servicediscovery.amazonaws.com",
                  "glacier.amazonaws.com",
                  "elasticbeanstalk.amazonaws.com",
                  "ecs.amazonaws.com",
                  "cloudformation.amazonaws.com",
                  "budgets.amazonaws.com",
                  "cloudhsm.amazonaws.com",
                  "inspector.amazonaws.com",
                  "elasticmapreduce.amazonaws.com",
                  "codedeploy.amazonaws.com",
                  "states.amazonaws.com",
                  "acm.amazonaws.com",
                  "serverlessrepo.amazonaws.com",
                  "importexport.amazonaws.com",
                  "firehose.amazonaws.com",
                  "apigateway.amazonaws.com",
                  "sqs.amazonaws.com",
                  "cloudfront.amazonaws.com",
                  "translate.amazonaws.com",
                  "cloud9.amazonaws.com",
                  "elastictranscoder.amazonaws.com",
                  "sts.amazonaws.com",
                  "ec2.amazonaws.com",
                  "kinesisvideo.amazonaws.com",
                  "codestar.amazonaws.com",
                  "autoscaling.amazonaws.com",
                  "support.amazonaws.com",
                  "greengrass.amazonaws.com",
                  "guardduty.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "cloudsearch.amazonaws.com",
                  "route53domains.amazonaws.com",
                  "servicecatalog.amazonaws.com",
                  "lambda.amazonaws.com",
                  "appstream.amazonaws.com",
                  "appsync.amazonaws.com",
                  "freertos.amazonaws.com",
                  "codecommit.amazonaws.com",
                  "elasticloadbalancing.amazonaws.com",
                  "iot.amazonaws.com",
                  "sns.amazonaws.com",
                  "swf.amazonaws.com",
                  "iam.amazonaws.com",
                  "ses.amazonaws.com",
                  "storagegateway.amazonaws.com",
                  "logs.amazonaws.com",
                  "events.amazonaws.com",
                  "eks.amazonaws.com",
                  "cognito-idp.amazonaws.com",
                  "kinesisanalytics.amazonaws.com",
                  "clouddirectory.amazonaws.com",
                  "kinesis.amazonaws.com",
                  "cloudtrail.amazonaws.com",
                  "s3.amazonaws.com",
                  "transcribe.amazonaws.com",
                  "glue.amazonaws.com",
                  "secretsmanager.amazonaws.com",
                  "sagemaker.amazonaws.com",
                  "sumerian.amazonaws.com",
                  "codebuild.amazonaws.com",
                  "ssm.amazonaws.com",
                  "gamelift.amazonaws.com",
                  "kms.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "GreetingApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Greeting API",
        "Description": "API used for Greeting requests",
        "FailOnWarnings": true
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GreetingLambda",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "GreetingApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "ApiGatewayCloudWatchLogsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApiGatewayLogsPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayAccount": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGatewayCloudWatchLogsRole",
            "Arn"
          ]
        }
      }
    },
    "GreetingApiStage": {
      "DependsOn": [
        "ApiGatewayAccount"
      ],
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiDeployment"
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": true,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*"
          }
        ],
        "RestApiId": {
          "Ref": "GreetingApi"
        },
        "StageName": "LATEST"
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "GreetingRequest"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "GreetingApi"
        },
        "StageName": "DummyStage"
      }
    },
    "GreetingResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "GreetingApi"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "GreetingApi",
            "RootResourceId"
          ]
        },
        "PathPart": "greeting"
      }
    },
    "GreetingRequest": {
      "DependsOn": "LambdaPermission",
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GreetingLambda",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200
            }
          ],
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "{",
                  "  \"id\": \"$input.params('id')\"",
                  "}"
                ]
              ]
            }
          }
        },
        "RequestParameters": {
          "method.request.querystring.name": false
        },
        "ResourceId": {
          "Ref": "GreetingResource"
        },
        "RestApiId": {
          "Ref": "GreetingApi"
        },
        "MethodResponses": [
          {
            "StatusCode": 200
          }
        ]
      }
    }
  },
  "Outputs": {
    "RootUrl": {
      "Description": "Root URL of the API gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "GreetingApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com"
          ]
        ]
      }
    }
  }
}
